<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  @author thomas.quintana@telestax.com (Thomas Quintana)
-->
<mapper namespace="org.mobicents.servlet.sip.restcomm.dao.CallDetailRecordsDao">
  <insert id="addCallDetailRecord" parameterType="map">
    INSERT INTO "restcomm_call_detail_records" ("sid", "instanceid", "parent_call_sid", "date_created", "date_updated", "account_sid", "recipient", "sender", "phone_number_sid", "status",
    "start_time", "end_time", "duration", "price", "direction", "answered_by", "api_version", "forwarded_from", "caller_name", "uri", "call_path", "ring_duration", "conference_sid", "muted", "start_conference_on_enter", "end_conference_on_exit", "on_hold", "ms_id", "call_type")
    VALUES (#{sid}, #{instanceid}, #{parent_call_sid}, #{date_created},
    #{date_updated}, #{account_sid}, #{to}, #{from}, #{phone_number_sid}, #{status}, #{start_time}, #{end_time}, #{duration}, #{price}, #{direction},
    #{answered_by}, #{api_version}, #{forwarded_from}, #{caller_name}, #{uri}, #{call_path}, #{ring_duration}, #{conference_sid}, #{muted}, #{start_conference_on_enter}, #{end_conference_on_exit}, #{on_hold}, #{ms_id}, #{call_type});
  </insert>
  
  <select id="getCallDetailRecord" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "sid"=#{sid};
  </select>

	<select id="getInProgressCallsByClientName" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM "restcomm_call_detail_records" WHERE (UPPER("status") = ('IN_PROGRESS') OR UPPER("status") = ('IN-PROGRESS')) AND "parent_call_sid" IS NULL AND "sender"=#{sender};
	</select>

	<select id="getInProgressCallsByAccountSid" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM "restcomm_call_detail_records" WHERE (UPPER("status") = ('IN_PROGRESS') OR UPPER("status") = ('IN-PROGRESS')) AND "parent_call_sid" IS NULL AND "account_sid"=#{accountSid};
	</select>

  <!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/153 -->
  <!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/110 -->
  <select id="getTotalCallDetailRecordByUsingFilters" parameterType="org.restcomm.connect.dao.entities.CallDetailRecordFilter" resultType="int">
    SELECT COUNT(*) FROM "restcomm_call_detail_records" WHERE

    <!-- are we counting cdrs from a single account or from an account set -->
    <if test="accountSidSet == null">
      "account_sid"=#{accountSid}
    </if>
    <if test="accountSidSet != null">
      <if test="!accountSidSet.isEmpty()">
        "account_sid" IN
        <foreach item="item" index="index" collection="accountSidSet" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="accountSidSet.isEmpty()">
        "account_sid"=''
      </if>
    </if>

    <if test="instanceid != null">
      AND "instanceid" like #{instanceid}
    </if>
    <if test="recipient != null">
      AND "recipient" like #{recipient}
    </if>
    <if test="sender != null">
      AND "sender" like #{sender}
    </if>
    <if test="status != null">
      AND "status" like #{status}
    </if>
    <if test="parentCallSid != null">
      AND "parent_call_sid" like #{parentCallSid}
    </if>
    <if test="conferenceSid != null">
      AND "conference_sid" like #{conferenceSid}
    </if>
    <!-- select * from "restcomm_call_detail_records" where "start_time" >= '2013-08-23' order by "start_time" ; -->
    <if test="startTime != null">
      AND "start_time" &gt;= #{startTime}
    </if>
    <if test="endTime != null">
      AND "end_time" &lt;= DATE_ADD(#{endTime},INTERVAL 1 DAY)
    </if>
    <if test="callType != null">
      AND "call_type" = #{callType}
    </if>
  </select>

  <!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/153 -->
  <!-- Issue 153: https://bitbucket.org/telestax/telscale-restcomm/issue/110 -->
  <select id="getCallDetailRecordByUsingFilters" parameterType="org.restcomm.connect.dao.entities.CallDetailRecordFilter" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" AS "restcomm_call_detail_records" WHERE

    <!-- are we retrieving cdrs from a single account or from an account set -->
    <if test="accountSidSet == null">
      "account_sid"=#{accountSid}
    </if>
    <if test="accountSidSet != null">
      <if test="!accountSidSet.isEmpty()">
        "account_sid" IN
        <foreach item="item" index="index" collection="accountSidSet" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="accountSidSet.isEmpty()">
        "account_sid"=''
      </if>
    </if>

    <if test="instanceid != null">
      AND "instanceid" like #{instanceid}
    </if>
    <if test="recipient != null">
      AND "recipient" like #{recipient}
    </if>
    <if test="sender != null">
      AND "sender" like #{sender}
    </if>
    <if test="status != null">
      AND "status" like #{status}
    </if>
    <if test="parentCallSid != null">
      AND "parent_call_sid" like #{parentCallSid}
    </if>
    <if test="conferenceSid != null">
      AND "conference_sid" like #{conferenceSid}
    </if>
    <!-- select * from "restcomm_call_detail_records" where "start_time" >= '2013-08-23' order by "start_time" ; -->
    <if test="startTime != null">
      AND "start_time" &gt;= #{startTime}
    </if>
    <if test="endTime != null">
      AND "end_time" &lt;= DATE_ADD(#{endTime},INTERVAL 1 DAY)
    </if>
    <if test="callType != null">
      AND "call_type" = #{callType}
    </if>
    order by "start_time"
    LIMIT #{limit} OFFSET #{offset}

  </select>

  <!-- Issue 1215: https://github.com/RestComm/Restcomm-Connect/issues/1215 -->
  <select id="getAverageCallDurationLast24Hours" parameterType="map" resultType="double">
    SELECT AVG("duration") FROM "restcomm_call_detail_records" AS "restcomm_call_detail_records" WHERE "instanceid" like #{instanceid}

    <!-- select AVG(duration) from restcomm_call_detail_records where instanceid like ('ID1979e298e5194cc78191b03ea64c5466') AND start_time >= '2016-06-24' AND end_time <= DATE_ADD('2016-06-24', INTERVAL 1 DAY); -->
    AND "start_time" &gt;= #{startTime}
    AND "end_time" &lt;= DATE_ADD(#{startTime},INTERVAL 1 DAY);
  </select>

  <!-- Issue 1215: https://github.com/RestComm/Restcomm-Connect/issues/1215 -->
  <select id="getAverageCallDurationLastHour" parameterType="map" resultType="double">
    SELECT AVG("duration") FROM "restcomm_call_detail_records" AS "restcomm_call_detail_records" WHERE "instanceid" like #{instanceid}

    <!-- select AVG(duration) from restcomm_call_detail_records where instanceid like ('ID1979e298e5194cc78191b03ea64c5466') AND start_time >= '2016-06-24 11:00:00' AND end_time <= DATE_ADD('2016-06-24 11:00:00', INTERVAL 1 HOUR); -->
    AND "start_time" &gt;= #{startTime}
    AND "end_time" &lt;= DATE_ADD(#{startTime},INTERVAL 1 HOUR);
  </select>

  <select id="getCallDetailRecords" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "account_sid"=#{account_sid};
  </select>

  <select id="getCallDetailRecordsByRecipient" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "recipient"=#{to};
  </select>

  <select id="getCallDetailRecordsBySender" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "sender"=#{from};
  </select>

  <select id="getCallDetailRecordsByStatus" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "status"=#{status};
  </select>

  <select id="getCallDetailRecordsByStartTime" parameterType="date" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "start_time"&gt;=#{start_time} AND "start_time"&lt;DATE_ADD(#{start_time},INTERVAL 1 DAY);
  </select>

  <select id="getCallDetailRecordsByEndTime" parameterType="date" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "end_time"&lt;=#{end_time};
  </select>

  <select id="getCallDetailRecordsByParentCall" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "parent_call_sid"=#{parent_call_sid};
  </select>

  <select id="getCallDetailRecordsByInstanceId" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "instanceid"=#{instanceid};
  </select>

  <select id="getInCompleteCallDetailRecordsByInstanceId" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "instanceid"=#{instanceid} AND (UPPER("status") = ('IN_PROGRESS') OR 
      UPPER("status") = ('IN-PROGRESS') OR UPPER("status") = ('RINGING') OR UPPER("status") = ('QUEUED'));
  </select>

  <select id="getCallDetailRecordsByConferenceSid" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_call_detail_records" WHERE "conference_sid"=#{conference_sid};
  </select>

  <delete id="removeCallDetailRecord" parameterType="string">
    DELETE FROM "restcomm_call_detail_records" WHERE "sid"=#{sid};
  </delete>

  <delete id="removeCallDetailRecords" parameterType="string">
    DELETE FROM "restcomm_call_detail_records" WHERE "account_sid"=#{account_sid};
  </delete>

  <update id="updateCallDetailRecord" parameterType="map">
    UPDATE "restcomm_call_detail_records" SET "date_updated"=#{date_updated}, "status"=#{status}, "start_time"=#{start_time}, "end_time"=#{end_time}, "duration"=#{duration},
    "price"=#{price}, "answered_by"=#{answered_by}, "forwarded_from"=#{forwarded_from},  "ring_duration"=#{ring_duration}, "conference_sid"=#{conference_sid}, "muted"=#{muted}, "start_conference_on_enter"=#{start_conference_on_enter}, "end_conference_on_exit"=#{end_conference_on_exit}, "on_hold"=#{on_hold} WHERE "sid"=#{sid};
  </update>

  <update id="updateInCompleteCallDetailRecordsToCompletedByInstanceId" parameterType="string">
    UPDATE "restcomm_call_detail_records"
      SET "status"='COMPLETED'
      WHERE "instanceid"=#{instanceid} AND (UPPER("status") = ('IN_PROGRESS') OR 
        UPPER("status") = ('IN-PROGRESS') OR UPPER("status") = ('RINGING') OR UPPER("status") = ('QUEUED'));
  </update>
</mapper>